.post-type-document {

	.acf-settings-wrap {
		> h1 {
			display: flex;
			align-items: center;
			gap: 0.5rem;

			.button {
				top: 0;

				&:active {
					margin-left: unset;
				}
			}
		}
	}

	#minor-publishing-actions {
		display: none;
	}

	#post-visibility-select {
		br {
			display: none;
		}

		label[for="visibility-radio-public"],
		label[for="visibility-radio-private"] {
			small {
				display: block;
				font-size: 0.9em;
				font-style: italic;
				margin-block-end: 0.5rem;
				margin-inline-start: 1.5rem;
				line-height: 1.3;
			}
		}

		input#visibility-radio-password,
		label[for="visibility-radio-password"] {
			display: none;
			// Just in case something else overrides display: none
			pointer-events: none;
			cursor: not-allowed;
			opacity: 0.5;
		}
	}
}

#acf-group_simple-document-portal__document-access-settings {
	container-type: inline-size;

	.acf-fields {
		@container (width >= 400px) {
			display: grid;
			grid-template-columns: repeat(2, 1fr);
		}

		@container (width >= 600px) {
			grid-template-columns: repeat(3, 1fr);
		}

		@container (width >= 800px) {
			grid-template-columns: repeat(5, 1fr);
		}

		.acf-field-message {
			grid-column: 1 / -1;
		}
	}
}

// Taxonomy edit screens
body.wp-admin.edit-tags-php,
body.wp-admin.term-php {

	select#parent {
		width: 100%;
	}

	th.acf-label[scope="row"] {
		label {
			font-weight: inherit;
		}
	}

	.form-table {
		input, select, textarea {
			width: 100%;
			max-width: 100%;
		}
	}
}

body.wp-admin.edit-tags-php {

	.wp-list-table {
		th#prefix {
			width: 5rem;
		}

		td.column-prefix {
			font-weight: 600;
			font-size: 14px; // to match the title
		}
	}
}

body.wp-admin.term-php {
	#acf-form-data + h2 {
		display: none;
	}
}

.edit-tag-actions {
	display: flex;
	justify-content: flex-end;
	padding-inline: 0.5rem;

	.spinner {
		order: -1;
	}
}

.acf-field .acf-label {
	&:not(:has(.description)) {
		margin-bottom: 0;
	}

	label {
		font-weight: bold;
	}

	.description {
		margin-top: 0;
	}
}

.acf-field-message {

	.acf-input {
		p:first-child {
			margin-top: 0;
		}

		p:last-child {
			margin-bottom: 0;
		}
	}
}

button.acf-js-tooltip {
	appearance: none;
	border: 0;
	background: transparent;
}

label:has(button.acf-js-tooltip) {
	display: flex;
	align-items: center;
}

#acf-group_simple-document-portal__general-settings {
	.acf-field-layout-switch-breakpoint {
		display: grid;
		grid-template-columns: repeat(5, 1fr);
		grid-template-rows: repeat(2, auto);
		padding: 0.5rem;

		&:before {
			display: none;
		}

		.acf-label {
			display: contents;

			label {
				grid-row: span 2;
				grid-column: span 1;
				align-content: center;
			}

			.description {
				order: 3;
				grid-column: 1 / -1;
				padding-block-start: 0.25rem;
			}
		}

		.acf-input {
			grid-column: span 4;
			width: unset;
			padding: 0;
		}
	}
}

#acf-group_folder-management-fields {

	div[data-name="field_folders_repeater"] {
		// Hide the index column and hence row reordering, because it's going to be ignored on save.
		// :first-child keeps the add/delete row buttons available.
		.acf-row-handle:first-child {
			display: none;
			pointer-events: none;
		}

		// Remove "Add row" from the repeater rows, because ordering will be ignored anyway - just have users add them to the bottom
		.acf-row-handle {
			[data-event="add-row"] {
				display: none;
				pointer-events: none;
			}
		}

		// All repeaters set to "table" format, at every level
		.acf-table {
			display: block;

			thead, tbody {
				display: contents;

				.acf-th[data-name="field_subfolders_repeater"] {
					display: none;
				}

				tr {
					display: grid;
					grid-template-columns: repeat(8, 1fr);
					width: 100%;
					position: relative;
					box-sizing: border-box;
					padding-inline-end: 2rem; // space for the absolutely-positioned .remove column

					th, td {
						width: unset !important; // override inline styles from ACF
					}

					[data-key="field_folder-name"],
					[data-key="field_subfolder-name"] {
						grid-column: span 4;
					}

					[data-key="field_folder-slug"],
					[data-key="field_subfolder-slug"] {
						grid-column: span 2;
					}

					.acf-row-handle:empty {
						display: none;
					}

					.acf-row-handle.remove {
						position: absolute;
						top: 0;
						right: 0;
						width: 1rem !important;
						height: 2rem;

						[data-event="remove-row"] {
							display: block; // always show
						}
					}

					.acf-field-subfolders {
						grid-column: 1 / -1;

						th, td {
							border: 0;
						}
					}
				}
			}
		}
	}
}

// We can't disable certain fields that we don't want editable, because they won't be submitted for custom processing.
// readonly works, but appearance is still potentially confusing, so let's make them look disabled and further prevent interaction with styling.
#acf-group_folder-management-fields .acf-field input[readonly="readonly"] {
	pointer-events: none;
	opacity: 0.5;
}
