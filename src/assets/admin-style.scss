@mixin make-folder-row() {
	$colwidth: 10;

	display: flex;
	flex-wrap: wrap;
	width: 100%;
	position: relative;
	box-sizing: border-box;
	justify-content: flex-end;

	.acf-field, .acf-th {
		width: 10%;
		flex-basis: 10%;

		.acf-label,
		.acf-input {
			padding-inline: 0;
		}
	}

	[data-name="prefix"] {
		width: 10%;
		flex-basis: 10%;
		padding-inline-end: 0;
		order: -2;
		width: 10%;
		flex-basis: 10%;

		@container (width >= 500px) {
			order: unset;
			min-width: 4rem;
		}

		input {
			background: transparent;
			border-right: 0;
			border-top-right-radius: 0;
			border-bottom-right-radius: 0;
		}
	}

	[data-name="name"] {
		width: auto;
		flex-basis: auto;
		padding-inline-start: 0;
		width: 90%;
		flex-basis: 90%;
		order: -1;

		@container (width >= 500px) {
			flex-grow: 1;
			flex-basis: unset;
			width: unset;
			order: unset;
		}

		input {
			border-left: 0;
			padding-left: 0;
			border-top-left-radius: 0;
			border-bottom-left-radius: 0;
		}
	}

	[data-name="slug"] {
		padding-inline: 0.5rem;
		box-sizing: border-box;
		width: calc(200px + 1rem);
		flex-basis: calc(200px + 1rem);
	}

	[data-name="id"] {
		width: 4rem;
		flex-basis: 4rem;

		@container (width >= 500px) {
			width: 6rem;
			flex-basis: 6rem;
		}
	}

	[data-type="repeater"] {
		width: 100%;
		flex-basis: 100%;
	}

	[data-key="field_subfolders"] {
		[data-name="name"] {
			@container (width >= 500px) {
				margin-inline-start: -0.25rem;
			}
		}

		[data-name="slug"] {
		}

		[data-name="id"] {
			@container (width >= 500px) {
				width: 4rem;
				flex-basis: 4rem;
			}
		}
	}
}


// Custom icon + tooltip instructions in labels
label:has(button.acf-js-tooltip) {
	display: flex !important;
	align-items: center;
	gap: 0.125rem;

	button.acf-js-tooltip {
		appearance: none;
		border: 0;
		background: transparent;
		opacity: 0.5;
		transition: opacity 0.2s ease-in-out;
		padding: 0;
		font-size: 0.8rem;

		&:hover, &:focus {
			opacity: 1;
		}
	}
}

.acf-field {

	.acf-label {
		&:not(:has(.description)) {
			margin-bottom: 0;
		}

		label {
			font-weight: bold;
			margin-bottom: 0;
		}

		.description {
			margin-top: 0;
		}
	}

	// We can't disable certain fields that we don't want editable (such as term ID in the folder management screen),
	// because they won't be submitted for custom processing.
	// readonly works, but appearance is still potentially confusing,
	// so let's make them look disabled and further prevent interaction with styling.
	input[readonly="readonly"] {
		pointer-events: none;
		opacity: 0.5;
	}
}

.acf-field-message {

	.acf-input {
		p:first-child {
			margin-top: 0;
		}

		p:last-child {
			margin-bottom: 0;
		}
	}
}

.post-type-document {

	.acf-settings-wrap {
		> h1 {
			display: flex;
			align-items: center;
			gap: 0.5rem;

			.button {
				top: 0;

				&:active {
					margin-left: unset;
				}
			}
		}
	}

	#minor-publishing-actions {
		display: none;
	}

	#post-visibility-select {
		br {
			display: none;
		}

		label[for="visibility-radio-public"],
		label[for="visibility-radio-private"] {
			small {
				display: block;
				font-size: 0.9em;
				font-style: italic;
				margin-block-end: 0.5rem;
				margin-inline-start: 1.5rem;
				line-height: 1.3;
			}
		}

		input#visibility-radio-password,
		label[for="visibility-radio-password"] {
			display: none;
			// Just in case something else overrides display: none
			pointer-events: none;
			cursor: not-allowed;
			opacity: 0.5;
		}
	}
}

#acf-group_simple-document-portal__document-access-settings {
	container-type: inline-size;

	.acf-fields {
		@container (width >= 400px) {
			display: grid;
			grid-template-columns: repeat(2, 1fr);
		}

		@container (width >= 600px) {
			grid-template-columns: repeat(3, 1fr);
		}

		@container (width >= 800px) {
			grid-template-columns: repeat(5, 1fr);
		}

		.acf-field-message {
			grid-column: 1 / -1;
		}
	}
}

#acf-group_simple-document-portal__general-settings {
	.acf-field-layout-switch-breakpoint {
		display: grid;
		grid-template-columns: repeat(5, 1fr);
		grid-template-rows: repeat(2, auto);
		padding: 0.5rem;

		&:before {
			display: none;
		}

		.acf-label {
			display: contents;

			label {
				grid-row: span 2;
				grid-column: span 1;
				align-content: center;
			}

			.description {
				order: 3;
				grid-column: 1 / -1;
				padding-block-start: 0.25rem;
			}
		}

		.acf-input {
			grid-column: span 4;
			width: unset;
			padding: 0;
		}
	}
}

#acf-group_folder-management-fields {

	div[data-name="field_folders_repeater"] {
		// Hide the index column and hence row reordering, because it's going to be ignored on save.
		// :first-child keeps the add/delete row buttons available.
		.acf-row-handle:first-child {
			display: none;
			pointer-events: none;
		}

		.acf-icon.-minus::before {
			content: "\f182"; // bin instead of minus symbol
		}

		// Remove "Add row" from the repeater rows, because ordering will be ignored anyway - just have users add them to the bottom
		.acf-row-handle {
			[data-event="add-row"] {
				display: none;
				pointer-events: none;
			}
		}

		// All repeaters set to "table" format, or with .acf-table class (e.g., row format is "acf-table -row")
		// at every level, within the folder management fields, unless overriden
		.acf-table {
			display: block;
			container-type: inline-size;

			thead, tbody {
				display: contents;

				.acf-th[data-name="field_subfolders_repeater"] {
					display: none;
				}

				.acf-row-handle:empty {
					display: none;
				}

				.acf-row-handle.remove {
					position: absolute;
					top: 0;
					right: 0;
					width: 1rem !important;
					height: 1.5rem;
					background: transparent;

					[data-event="remove-row"] {
						display: block; // always show
					}
				}

			}
		}

		.acf-table:not(.-row) {
			tr {
				@include make-folder-row();
				padding-inline-end: 1.5rem;

				th, td {
					width: unset !important; // override inline styles from ACF
					padding-inline: 0;
				}

				.acf-field-subfolders {
					th, td {
						border: 0;
					}
				}
			}
		}

		// Top level folders when displayed in ACF 'row' format
		> .acf-input > .acf-repeater.-row > .acf-table {
			border: 0;
			background: 0;

			> tbody > .acf-row {
				display: block;
				background: white;
				margin-block: 1rem;
				border-radius: 4px;
				border: 0;
				box-shadow: 0 0 0.25rem rgba(0, 0, 0, 0.15);
				padding-inline: 2rem 2.5rem;

				> .acf-row-handle.remove {
					background: transparent;
					border: 0;
					top: 1.6rem;
					padding: 0.5rem 1rem;

					.acf-icon.-minus {
						box-sizing: border-box;
						height: 1.5rem;
						width: 1.5rem;
						font-size: 1.1rem;
						display: flex;
						align-items: center;
						justify-content: center;
						padding-left: 1px; // fix the slight misalignment within the bin icon
					}
				}

				> .acf-fields {
					border: 0;
					position: relative;
					@include make-folder-row();
					padding-inline-end: 2rem;

					&:before {
						font-family: dashicons;
						content: "\f18f";
						font-size: 1.5rem;
						position: absolute;
						top: 2rem;
						left: -1.5rem;
					}

					> .acf-field {
						display: flex;
						flex-direction: column;
						border-top: 0;

						> .acf-label,
						> .acf-input {
							width: 100%;
							flex-basis: 100%;
						}

						&:before {
							display: none;
						}

						&[data-name="field_subfolders_repeater"] {
							border-top: 0;
							padding-top: 0;

							.acf-table {
								border-radius: 0.25rem;
								padding: 0.5rem;
								box-sizing: border-box;
								background: white;

								.acf-th {
									padding-bottom: 0;
								}
							}
						}
					}
				}
			}
		}
	}
}

